/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.72
 * Generated at: 2022-05-03 22:49:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.DoctorLogin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Enumeration;
import business.User;

public final class Password_005fReset_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/jstl-impl.jar", Long.valueOf(1651618131646L));
    _jspx_dependants.put("jar:file:/C:/Users/eVmPr/Documents/IS240/JODEA_Project/VacTrackSys/build/web/WEB-INF/lib/jstl-impl.jar!/META-INF/fn.tld", Long.valueOf(1343837818000L));
    _jspx_dependants.put("jar:file:/C:/Users/eVmPr/Documents/IS240/JODEA_Project/VacTrackSys/build/web/WEB-INF/lib/jstl-impl.jar!/META-INF/c.tld", Long.valueOf(1343837818000L));
    _jspx_dependants.put("jar:file:/C:/Users/eVmPr/Documents/IS240/JODEA_Project/VacTrackSys/build/web/WEB-INF/lib/jstl-impl.jar!/META-INF/sql.tld", Long.valueOf(1343837818000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("business.User");
    _jspx_imports_classes.add("java.util.Enumeration");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("  \n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("        <meta name=\"author\" content=\"Team_JODEA\"> \n");
      out.write("\n");
      out.write("        <title>Reset Password</title>\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"style.css\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"../css/all.css\">\n");
      out.write("        <link rel=\"icon\" type=\"image/x-icon\" href=\"../image/favicon_16x16.png\" />\n");
      out.write("        <script src=\"../js/validate.js\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"../js/functions.js\"></script>\n");
      out.write("        <script src=\"https://kit.fontawesome.com/98e4c48f68.js\" crossorigin=\"anonymous\"></script>\n");
      out.write("        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n");
      out.write("        <script>\n");
      out.write("            function pageAction(action) {\n");
      out.write("                document.getElementById(\"step\").value = action;\n");
      out.write("                if (action === 'method') {\n");
      out.write("                    document.getElementById(\"step\").value = $(\"rsmethod\").value;\n");
      out.write("                    document.passwdreset.submit();\n");
      out.write("                } else {\n");
      out.write("                    document.getElementById(\"passwdreset\").submit();\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            }\n");
      out.write("            window.onload = () => {\n");
      out.write("                try {\n");
      out.write("                    document.getElementById(\"methodtype\").onchange = (evt) => {\n");
      out.write("                        let m = evt.currentTarget;\n");
      out.write("                        var method = document.getElementById(\"methodtype\").value;\n");
      out.write("                        console.log(\"Method = \" + method);\n");
      out.write("                        if (method === 'sendCode') {\n");
      out.write("                            if ($(\".sendCode input\").css(\"display\") === 'none') {\n");
      out.write("                                $(\".sendCode input\").css(\"display\", \"block\");\n");
      out.write("                                $(\".sendCode input\").attr(\"rquired\", null);\n");
      out.write("                            }\n");
      out.write("\n");
      out.write("                            if ($(\".cquestion input\").css(\"display\") === 'block') {\n");
      out.write("                                $(\".cquestion input\").css(\"display\", \"none\");\n");
      out.write("                                $(\".cquestion input\").removeAttr(\"required\");\n");
      out.write("                            }\n");
      out.write("\n");
      out.write("                        } else if (method === 'cquestion') {\n");
      out.write("                            if ($(\".cquestion input\").css(\"display\") === 'none') {\n");
      out.write("                                $(\".cquestion input\").css(\"display\", \"block\");\n");
      out.write("                                $(\".cquestion input\").attr(\"rquired\", null);\n");
      out.write("                            }\n");
      out.write("                            if ($(\".sendCode input\").css(\"display\") === 'block') {\n");
      out.write("                                $(\".sendCode input\").css(\"display\", \"none\");\n");
      out.write("                                $(\".sendCode input\").removeAttr(\"required\");\n");
      out.write("                            }\n");
      out.write("                        } else if (method === \" \") {\n");
      out.write("                            if ($(\".sendCode input\").css(\"display\") === 'block') {\n");
      out.write("                                $(\".sendCode input\").css(\"display\", \"none\");\n");
      out.write("                                $(\".sendCode input\").removeAttr(\"required\");\n");
      out.write("                            }\n");
      out.write("                            if ($(\".cquestion input\").css(\"display\") === 'block') {\n");
      out.write("                                $(\".cquestion input\").css(\"display\", \"none\");\n");
      out.write("                                $(\".sendCode input\").removeAttr(\"required\");\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                    };\n");
      out.write("                } catch (e) {\n");
      out.write("                }\n");
      out.write("            };\n");
      out.write("            $(document).ready(() => {\n");
      out.write("                $(\"#userid\").attr(\"oninvalid\", \"setCustomValidity('Employee ID must contain only numbers and must be at least 8 characters long.');\"\n");
      out.write("                        + \"$('#valid').attr('value', 'false')\");\n");
      out.write("//                $(\"#email\").\n");
      out.write("//         document.getElementById(\"email\").addEventListener('invalid', function(ev){\n");
      out.write("//             ev.target.setCustomValidity('Email is invalid.');\n");
      out.write("//         });\n");
      out.write("                $(\"#cancel\").click(evt => {\n");
      out.write("\n");
      out.write("\n");
      out.write("                    var c = confirm(\"Are you sure you want to cancel? Your input data may be lost.\");\n");
      out.write("                    if (c === true) {\n");
      out.write("                        // clear out all reset cookies from form if any\n");
      out.write("                        pageAction('cancel');\n");
      out.write("                        // document.getElementById(\"passwdreset\").submit();\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("                $(\"#searchbtn\").click(() => {\n");
      out.write("                    let user = $(\"#userid\").val();\n");
      out.write("                    let email = $(\"#email\").val();\n");
      out.write("                    if (user === null || email === null) {\n");
      out.write("                        alert(\"Missing username or email.\");\n");
      out.write("\n");
      out.write("                    } else if (user === \"\" || email === \"\") {\n");
      out.write("                        alert(\"Missing username or email.\");\n");
      out.write("                    } else if (user !== null && email !== null) {\n");
      out.write("                        alert(\"You will have a 5 minute time limit to reset your password.\");\n");
      out.write("                        pageAction('search');\n");
      out.write("                        document.passwdreset.submit();\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("    </head>\n");
      out.write("\n");
      out.write("    <body>\n");
      out.write("        ");
      business.User u = null;
      synchronized (session) {
        u = (business.User) _jspx_page_context.getAttribute("u", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (u == null){
          u = new business.User();
          _jspx_page_context.setAttribute("u", u, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("        ");

            String acct = null, ver = "", act = null, act1 = null, acct1 = null, p = null;
            Cookie[] c = request.getCookies();
            Cookie oldrcode = null, oldact = null;
            //  clear old cookies

            u = (User) request.getSession().getAttribute("u");
            act = String.valueOf(request.getAttribute("act"));
            if (act == null) {
                act = "";

            }
            if (c.length > 0) {
                for (Cookie c1 : c) {
                    String name = c1.getName();
                    if (c1.getName().contains("account")) {
                        p = c1.getPath();
                        if (p != null) {
                            if (p.contains("/DoctorLogin")) {
                                if (!p.contains("/faces")) {
                                    request.getSession().setAttribute("acct", c1.getValue());
                                    acct = c1.getValue();

                                }
                            }
                        } else {
                            c1.setMaxAge(0);
                            c1.setHttpOnly(true);
                            response.addCookie(c1);

                        }

                    } else if (c1.getName().equals("rcode")) {
                        if (c1.getPath().contains("/DoctorLogin")) {
                            oldrcode = c1;
                            if (acct == null || act == null) {
                                // delete cookies
                                oldrcode.setMaxAge(1);
                                oldact.setMaxAge(1);
                                response.addCookie(oldrcode);
                                response.addCookie(oldact);

                            }
                        }

                    }
                }
            }
          
            if (u == null) {
                u = new User();
            }
        
      out.write("\n");
      out.write("        ");
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      boolean _jspx_th_c_005fset_005f0_reused = false;
      try {
        _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fset_005f0.setParent(null);
        // /DoctorLogin/Password_Reset.jsp(171,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setVar("state");
        // /DoctorLogin/Password_Reset.jsp(171,8) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setValue( act);
        int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
        if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
        _jspx_th_c_005fset_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
      }
      out.write("        \n");
      out.write("        <div class=\"hero\">\n");
      out.write("            <div class=\"form-box\">\n");
      out.write("                <div class=\"social-icons\">\n");
      out.write("                    <a href=\"https://www.mypatientchart.org/MyChart/Authentication/Login?\">\n");
      out.write("                        <img src=\"../image/download.png\">\n");
      out.write("                    </a>\n");
      out.write("                    <a href=\"https://physicians.wustl.edu/for-patients/mychart-patient-portal/\">\n");
      out.write("                        <img src=\"../image/washu2.png\">\n");
      out.write("                    </a>\n");
      out.write("                    <a href=\"https://www.mymercy.net/login\">\n");
      out.write("                        <img src=\"../image/mercy.jpg\">\n");
      out.write("                    </a>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <form id=\"passwdreset\" class=\"input-group\"\n");
      out.write("                      action=\"ResetPassword\" method=\"post\"\n");
      out.write("                      style=\"align-content: center;\" onsubmit=\"$('.submit-btn').attr('disabled', '');\">\n");
      out.write("                    <table>\n");
      out.write("\n");
      out.write("                        <tr>\n");
      out.write("                            <td style=\"width: 280px; \">\n");
      out.write("                                <input type=\"text\" class=\"input-field\" name=\"userid\" id=\"userid\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${u.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("                                       placeholder=\"UserID\" title=\"Enter User id\"  required>\n");
      out.write("                            </td>\n");
      out.write("                        </tr>\n");
      out.write("                        <tr>\n");
      out.write("                            <td>\n");
      out.write("                                <input type=\"email\" class=\"input-field\" name=\"email\" id=\"email\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${u.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("                                       placeholder=\"email (character@character.domain)\" \n");
      out.write("                                       title=\"Email Address\" required> <!-- pattern=\"[a-zA-z0-1_]+[]@[]{}.{2,}$\" -->\n");
      out.write("                            </td>\n");
      out.write("                        </tr>\n");
      out.write("                        ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("                        ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("                    </table>\n");
      out.write("                    ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                   <br>\n");
      out.write("                    <button type=\"button\" class=\"submit-btn\" id=\"cancel\">Cancel</button>\n");
      out.write("\n");
      out.write("                    <input type=\"hidden\" name=\"step\" id=\"step\" value=\"\" hidden=\"\">\n");
      out.write("                  <!--<input type=\"hidden\" name=\"ver\" id=\"ver\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ver}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">-->\n");
      out.write("                    <data id=\"valid\" value=\"\" hidden=\"\"></data>\n");
      out.write("                    <div id=\"message\" style=\"padding: \n");
      out.write("                         5px; background: white;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("            </div>\n");
      out.write("            <script>\n");
      out.write("                var x = document.getElementById(\"passwdreset\");\n");
      out.write("                x.style.left = \"50px\";\n");
      out.write("                function toggle() {// toggle methods\n");
      out.write("                    var element = document.getElementById(\"methodtype\");\n");
      out.write("                    var val = element.value;\n");
      out.write("                    if (val === 'Hint') {\n");
      out.write("                        var es = document.getElementsByClassName(\"Hint\");\n");
      out.write("                        for (var i = 0; i < es.length; i++) {\n");
      out.write("                            //                es[i]\n");
      out.write("                            if (es[i].classList.contains(\"show\")) {\n");
      out.write("                                es[i].classList.remove('show');\n");
      out.write("                            } else if (!es[i].classList.contains(\"show\")) {\n");
      out.write("                                es[i].classList.toggle('show');\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                    } else {\n");
      out.write("                        var es = document.getElementsByClassName(val);\n");
      out.write("                        for (var i = 0; i < es.length; i++) {\n");
      out.write("                            if (es[i].style.display === 'none') {\n");
      out.write("                                es[i].style.display = 'block';\n");
      out.write("                            } else if (es[i].style.display === 'block') {\n");
      out.write("                                es[i].style.display = 'none';\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                document.getElementById(\"passwdreset\").onsubmit = function () {\n");
      out.write("                    var e = document.getElementsByClassName(\"submit-btn\");\n");
      out.write("                    for (var i = 0; i < e.length; i++) {\n");
      out.write("                        if (!e[i].hasAttribute(\"disabled\")) {\n");
      out.write("                            e[i].setAttribute(\"disabled\", null);\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                };\n");
      out.write("                //                let toggleMethod = function () {\n");
      out.write("                //                    var method = document.getElementById(\"methodtype\").value;\n");
      out.write("                //                    let codein = document.getElementById(\"rcode\");\n");
      out.write("                //                    let ans = document.getElementById(\"ans\");\n");
      out.write("                //                    if (method === 'cquestion') {\n");
      out.write("                //                        if (!ans.hasAttribute(\"required\")) {\n");
      out.write("                //                            ans.setAttribute(\"required\", null);\n");
      out.write("                //                        }\n");
      out.write("                //                        if (codein.hasAttribute(\"required\")) {\n");
      out.write("                //                            codein.removeAttribute(\"required\");\n");
      out.write("                //                        }\n");
      out.write("                //                    } else if (method === 'sendCode') {\n");
      out.write("                //                        if (!codein.hasgetAttribute(\"required\")) {\n");
      out.write("                //                            codein.setAttribute(\"required\", null);\n");
      out.write("                //                        }\n");
      out.write("                //                        if (ans.hasAttribute(\"required\")) {\n");
      out.write("                //                            ans.removeAttribute(\"required\");\n");
      out.write("                //                        }\n");
      out.write("                //                        document.querySelector(\"#rcode\")[0].setAttribute(\"required\", null);\n");
      out.write("                //                    }\n");
      out.write("                //                };\n");
      out.write("            </script>\n");
      out.write("\n");
      out.write("    </body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /DoctorLogin/Password_Reset.jsp(204,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${state == \"found\"}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                            <tr>\n");
          out.write("                                <td>Select Reset Method</td>\n");
          out.write("                            </tr>\n");
          out.write("                            <tr>\n");
          out.write("                                <td><select title=\"Select Reset Method\" name=\"rsmethod\" id=\"methodtype\" onchange=\"\" value=\"\">\n");
          out.write("                                        <option title=\"none\" value=\" \" selected>Select</option>\n");
          out.write("                                        <option title=\"send code via email\" value=\"sendCode\">Reset Code via Email</option>\n");
          out.write("                                        <option title=\"challenge question\" value=\"cquestion\">Challenge Question</option>\n");
          out.write("                                        <!--<option value=\"Hint\"></option>-->\n");
          out.write("                                    </select></td>\n");
          out.write("                                <!--<td><button type=\"submit\" onclick=\"pageAction('method')\">Submit</button></td>-->\n");
          out.write("                            </tr>\n");
          out.write("                            <tr><td class=\"sendCode\" ><input class=\"submit-btn\" style=\"display: none;\" title=\"click send code\" type=\"submit\"\n");
          out.write("                                                             name=\"sendCode\" value=\"Send Code to email\" onclick=\"pageAction('sendCode')\">\n");
          out.write("                                </td></tr>\n");
          out.write("                            <tr><td class=\"sendCode\"><input style=\"display: none;\" title=\"type 6 digit code\" type=\"number\" maxlength=\"6\"  max=\"999999\"\n");
          out.write("                                                            class=\"input-field \" name=\"rcode\" \n");
          out.write("                                                            id=\"rcode\" value=\"\" maxlength=\"6\" placeholder=\"6-digit code\"></td></tr>\n");
          out.write("                            <tr><td class=\"cquestion\"><input type=\"text\" style=\"display: none;\" class=\"input-field\" title=\"security question\" \n");
          out.write("                                                             name=\"ques\" id=\"ques\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${u.question}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" readonly></td></tr>\n");
          out.write("                            <tr><td class=\"cquestion\"><input type=\"text\" style=\"display: none;\" class=\"input-field\" name=\"ans\" \n");
          out.write("                                                             id=\"ans\" value=\"\" placeholder=\"Answer\"></td></tr>\n");
          out.write("                            <tr><td></td></tr>\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /DoctorLogin/Password_Reset.jsp(230,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${state==\"foundver\"}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                              <tr>\n");
          out.write("                                  <td style=\"width: 240px;\"><input type=\"password\" name=\"upwd\" class=\"input-field\"\n");
          out.write("                                                                   id=\"upwd\" value=\"\" placeholder=\"Password\" required>\n");
          out.write("                                  </td>\n");
          out.write("                                  <td style=\"width: 40px;\">\n");
          out.write("                                      <i class=\"fas fa-1-5x fa-eye\" id=\"v-btn-p\" onclick=\"toggleV('upwd', 'v-btn-p')\"></i>\n");
          out.write("                                      <i id=\"validp\" class=\"fas fa-check\" style=\"color: green;\"></i>\n");
          out.write("                                  </td>\n");
          out.write("                              </tr>\n");
          out.write("                              <tr>\n");
          out.write("                                  <td style=\"width: 240px;\">\n");
          out.write("                                      <input type=\"password\" name=\"confpasswd\" class=\"input-field\" name=\"confpasswd\"\n");
          out.write("                                             id=\"confpasswd\" placeholder=\"Confirm Password\" required>\n");
          out.write("                                  </td>\n");
          out.write("                                  <td style=\"width: 40px;\"><i class=\"fas fa-1-5x fa-eye\" id=\"v-btn-c\" onclick=\"toggleV('upwd', 'v-btn-c')\"></i>\n");
          out.write("                                      <i id=\"validc\" class=\"fas fa-check\" style=\"color: green;\"\n");
          out.write("                                         onchange=\"validatePasswd('upwd', 'confpasswd')\"></i>\n");
          out.write("                                  </td>\n");
          out.write("                              </tr>\n");
          out.write("                              <tr>\n");
          out.write("                                  <td style=\"width: 280px; \">\n");
          out.write("                                      <input type=\"text\" class=\"input-field\" name=\"newhint\" id=\"newhint\"\n");
          out.write("                                             placeholder=\"New Hint\" required>\n");
          out.write("                                  </td>\n");
          out.write("                              </tr>    \n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                        ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                        ");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                        ");
          if (_jspx_meth_c_005fwhen_005f2(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                        ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                    ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /DoctorLogin/Password_Reset.jsp(260,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${state !=\"found\" && state != \"foundver\"}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                            <button type=\"button\" class=\"submit-btn\" title=\"Click to Find your Account\" id=\"searchbtn\"> Search </button>\n");
          out.write("\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /DoctorLogin/Password_Reset.jsp(264,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${state == \"found\" && state != \"foundver\"}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                            <button type=\"submit\" class=\"submit-btn\" id=\"reset-btn\" title=\"Reset account\" onclick=\"pageAction('ResetPasswd')\"> Reset Password </button>\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f2 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f2_reused = false;
    try {
      _jspx_th_c_005fwhen_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /DoctorLogin/Password_Reset.jsp(267,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${state==\"foundver\"}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f2 = _jspx_th_c_005fwhen_005f2.doStartTag();
      if (_jspx_eval_c_005fwhen_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                                <button type=\"submit\" title=\"update account password\" class=\"submit-btn\" id=\"update-btn\" onclick=\"pageAction('updatePasswd')\">Update Account</button>\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f2);
      _jspx_th_c_005fwhen_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
